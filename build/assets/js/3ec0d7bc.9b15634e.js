"use strict";(self.webpackChunkhello_world=self.webpackChunkhello_world||[]).push([[792],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var o=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=o.createContext({}),s=function(t){var e=o.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=s(t.components);return o.createElement(u.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},c=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,u=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),d=s(n),c=r,g=d["".concat(u,".").concat(c)]||d[c]||m[c]||i;return n?o.createElement(g,a(a({ref:e},p),{},{components:n})):o.createElement(g,a({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,a=new Array(i);a[0]=c;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l[d]="string"==typeof t?t:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4483:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1},a="Control Motor with Arduino",l={unversionedId:"programming-arduino/control-motor-with-arduino",id:"programming-arduino/control-motor-with-arduino",title:"Control Motor with Arduino",description:"In the previous tutorial we went over the wiring and introduced hello programs you can use to test your setup is correct. In this page we'll go over how to communicate with the arduino in order to tell it what power levels to run at.",source:"@site/docs/programming-arduino/control-motor-with-arduino.md",sourceDirName:"programming-arduino",slug:"/programming-arduino/control-motor-with-arduino",permalink:"/pZero/docs/programming-arduino/control-motor-with-arduino",draft:!1,editUrl:"https://github.com/Chris0016/pZero/tree/main/docs/programming-arduino/control-motor-with-arduino.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Programming Arduino",permalink:"/pZero/docs/category/programming-arduino"},next:{title:"Communication with Computer",permalink:"/pZero/docs/programming-arduino/communication-with-computer"}},u={},s=[{value:"Arduino Setup Test Code",id:"arduino-setup-test-code",level:2},{value:"Control Motor with Arduino",id:"control-motor-with-arduino-1",level:2},{value:"Smoothen Transition to PWM",id:"smoothen-transition-to-pwm",level:2},{value:"FAQsS",id:"faqss",level:2}],p={toc:s},d="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"control-motor-with-arduino"},"Control Motor with Arduino"),(0,r.kt)("p",null,"In the previous tutorial we went over the wiring and introduced hello programs you can use to test your setup is correct. In this page we'll go over how to communicate with the arduino in order to tell it what power levels to run at."),(0,r.kt)("h2",{id:"arduino-setup-test-code"},"Arduino Setup Test Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int MAGNET_1 = 9;\n\nvoid setup() {\n   pinMode(MAGNET_1, OUTPUT);\n}\n\nvoid loop() {\n    run_for_5s();\n    exit(0);\n}\n\nvoid run_for_5s(){\n    _run_magnet(5_000, 255);\n}\n\nvoid _run_magnet(int duration, int max_pwm){\n  static int ts = millis();\n  analogWrite(MAGNET_1, max_pwm);\n  \n   while(millis() - ts < duration ){\n   //do nothing \n   }\n\n  analogWrite(MAGNET_1, 0);\n\n}\n")),(0,r.kt)("h2",{id:"control-motor-with-arduino-1"},"Control Motor with Arduino"),(0,r.kt)("p",null,"The first step is to have a function that takes in a target pwm as a parameter and tells the motor to run at that pwm."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int MAGNET_1 = 9;\n\nvoid setup() {\n   pinMode(MAGNET_1, OUTPUT);\n}\n\nvoid loop() {\n    //play around with ths value and observe the different speeds of the motor. \n    int target_pwm = 100;\n    run_magnet(target_pwm);\n}\n\nvoid run_magnet(int target_pwm){\n    analogWrite(target_pwm);\n}\n\n")),(0,r.kt)("h2",{id:"smoothen-transition-to-pwm"},"Smoothen Transition to PWM"),(0,r.kt)("p",null,"We can  observe that our motor with tape starts and immediately reaches the target_pwm. We then change our program to make it go from 0 to target_pwm very smoothly by adding a delay and incrementing our values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int MAGNET_1 = 9;\nstatic int delay = 500; //play around with this value to change transitions between pwms. \nstatic int delay_before_next_loop = 5000; //Wait 5 seconds before repeating process\nunsigned long ts = millis();\n\n\nvoid setup() {\n   pinMode(MAGNET_1, OUTPUT);\n}\n\nvoid loop() {\n\n    int target_pwm = 255; //play around with ths value and observe the different speeds of the motor. \n    run_magnet(target_pwm);\n\n    while ( (unsigned long)(millis() - ts) < delay_before_next_loop) {\n            //doNothing\n        }\n}\n\nvoid run_magnet(int target_pwm){\n    int curr_pwm = 0;\n    while(curr_pwm < target_pwm){\n        static int ts = millis();\n        analogWrite(curr_pwm);\n\n            while ( (unsigned long)(millis() - ts) < delay_value) {\n            //doNothing\n            }\n\n        curr_pwm++; \n    }\n\n}\n\n")),(0,r.kt)("h2",{id:"faqss"},"FAQsS"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/blog/understanding-static-in-arduino"},"What does static mean?")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/blog/fixing-millis-rollover"},"What does unsigned long mean and why use it?")))}m.isMDXComponent=!0}}]);