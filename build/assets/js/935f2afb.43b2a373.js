"use strict";(self.webpackChunkhello_world=self.webpackChunkhello_world||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/pZero/docs/intro","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Materials","href":"/pZero/docs/getting-started/materials","docId":"getting-started/materials"},{"type":"link","label":"Resources","href":"/pZero/docs/getting-started/resources","docId":"getting-started/resources"},{"type":"link","label":"Wiring Setup","href":"/pZero/docs/getting-started/wiring-setup","docId":"getting-started/wiring-setup"}],"href":"/pZero/docs/category/getting-started"},{"type":"category","label":"Programming Arduino","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Control Motor with Arduino","href":"/pZero/docs/programming-arduino/control-motor-with-arduino","docId":"programming-arduino/control-motor-with-arduino"},{"type":"link","label":"Communication with Computer","href":"/pZero/docs/programming-arduino/communication-with-computer","docId":"programming-arduino/communication-with-computer"},{"type":"link","label":"OpenBCI Comms","href":"/pZero/docs/programming-arduino/openbci-comms","docId":"programming-arduino/openbci-comms"},{"type":"link","label":"OpenBCI Comms Explained","href":"/pZero/docs/programming-arduino/openbci-comms-explained","docId":"programming-arduino/openbci-comms-explained"}],"href":"/pZero/docs/category/programming-arduino"},{"type":"category","label":"OpenBCI Cyton Setup","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OpenBCI headset Setup","href":"/pZero/docs/open-bci-setup/openbci-setup","docId":"open-bci-setup/openbci-setup"}],"href":"/pZero/docs/category/openbci-cyton-setup"}]},"docs":{"getting-started/materials":{"id":"getting-started/materials","title":"Materials","description":"Electronics","sidebar":"tutorialSidebar"},"getting-started/resources":{"id":"getting-started/resources","title":"Resources","description":"Before Diving in its a good idea to familiarize yourself with the following technologies if you haven\'t already. The documentation assumes provides information on things that are hard to find or need deeper explanation.","sidebar":"tutorialSidebar"},"getting-started/wiring-setup":{"id":"getting-started/wiring-setup","title":"Wiring Setup","description":"Powerful electromagnets run hot and are expensive. A good way to get started quickly is to use a small motor with some tape attached. You can test your code hundreads of times without worrying about breaking an expensive electromagnet.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"We encourage you to familiarize yourself with Arduino and Python before starting the project.","sidebar":"tutorialSidebar"},"open-bci-setup/openbci-setup":{"id":"open-bci-setup/openbci-setup","title":"OpenBCI headset Setup","description":"Coming Soon.","sidebar":"tutorialSidebar"},"programming-arduino/communication-with-computer":{"id":"programming-arduino/communication-with-computer","title":"Communication with Computer","description":"The next step is to send signals to the arduino through an external device like a laptop to tell it what the next target_pwm should be. We are sending two comma separated values to our arduino and the arduino is replying back to confirm.","sidebar":"tutorialSidebar"},"programming-arduino/control-motor-with-arduino":{"id":"programming-arduino/control-motor-with-arduino","title":"Control Motor with Arduino","description":"In the previous tutorial we went over the wiring and introduced hello programs you can use to test your setup is correct. In this page we\'ll go over how to communicate with the arduino in order to tell it what power levels to run at.","sidebar":"tutorialSidebar"},"programming-arduino/openbci-comms":{"id":"programming-arduino/openbci-comms","title":"OpenBCI Comms","description":"At this stage we are ready to receive data from our OpenBCI headset. We can simulate our OpenBCI without actually having one ready yet by creating auto-generated data. This will give us the chance to develop and test out algorithms without actually having to setup the actual headset.","sidebar":"tutorialSidebar"},"programming-arduino/openbci-comms-explained":{"id":"programming-arduino/openbci-comms-explained","title":"OpenBCI Comms Explained","description":"In the previous section we controlled the arduino with auto-generated data from a artificial OpenBCI headset.","sidebar":"tutorialSidebar"}}}')}}]);